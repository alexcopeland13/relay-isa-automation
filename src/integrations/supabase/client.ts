
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://qvarmbhdradfpkegtpgw.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF2YXJtYmhkcmFkZnBrZWd0cGd3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU5NzA0MTYsImV4cCI6MjA2MTU0NjQxNn0.nPbIoja88OXjj_0-b_OJzwefRRM1r6T55QljRCxSOuQ";

// Create options for more debugging information
const options = {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
  },
  global: {
    fetch: (url: string, options: RequestInit) => {
      console.log('🔌 Supabase API Request:', url);
      return fetch(url, options);
    },
  },
};

// Log initialization to help debug
console.log('🗄️ Initializing Supabase client with URL:', SUPABASE_URL);
console.log('🔑 Auth key present:', !!SUPABASE_PUBLISHABLE_KEY);

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, options);

// Add a diagnostic function for convenience
export const diagnoseDatabaseConnection = async () => {
  try {
    const { data, error } = await supabase.from('leads').select('count');
    if (error) {
      console.error('❌ Database connection error:', error);
      return { success: false, error, message: error.message };
    }
    return { success: true, data };
  } catch (err) {
    console.error('❌ Unexpected database error:', err);
    return { success: false, error: err, message: err instanceof Error ? err.message : String(err) };
  }
};
